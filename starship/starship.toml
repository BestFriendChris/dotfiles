format = """
[╭─](bold yellow)\
$username\
$hostname\
$directory\
${custom.jj}\
$fill\
$time
[╰](bold yellow)\
$status\
$sudo\
$character"""

add_newline = false

[character]
success_symbol = "[─](bold yellow)[⦿](bold green)"
error_symbol = "[─](bold yellow)[⦿](bold red)"
vicmd_symbol = "[─](bold yellow)[](bold green)"

[directory]
format = "[┨](bold yellow)[$read_only]($read_only_style)[$path]($style)[┠─](bold yellow)"
read_only = " "
truncate_to_repo = true
truncation_symbol = "…/"
fish_style_pwd_dir_length = 1

[fill]
symbol = "─"
style = "yellow"

[hostname]
format = "[$hostname](dimmed cyan):"

[status]
disabled = false
format = '[\($status\)]($style)'
pipestatus = true
pipestatus_format = "$pipestatus"
pipestatus_separator = "|"

[time]
disabled = false
format = '[┨](bold yellow)[$time]($style)'
time_format = "%l:%M%P"
use_12hr = true

[username]
format = "[$user@]($style)"
style_user = "dimmed cyan"

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

[docker_context]
symbol = " "

[elixir]
symbol = " "
format = '[┨](bold yellow)[$symbol($version \(OTP $otp_version\))]($style)[┠](bold yellow)'

[elm]
symbol = " "

[erlang]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[git_branch]
symbol = " "
format = '[┨](bold yellow)[$symbol$branch]($style)[┠](bold yellow)'
only_attached = true

[git_commit]
format = '[┨](bold yellow)[ $hash$tag]($style)[┠](bold yellow)'

[git_status]
format = '[[┨](bold yellow)$ahead_behind[┠](bold yellow)]($style)'

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[lua]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[memory_usage]
symbol = " "
format = '[┨](bold yellow)$symbol[$ram( | $swap)]($style)[┠](bold yellow)'

[nim]
symbol = " "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[nix_shell]
symbol = " "
format = '[┨](bold yellow)[$symbol$state( \($name\))]($style)[┠](bold yellow)'

[nodejs]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[ocaml]
format = '[┨](bold yellow)[$symbol($version)(\($switch_indicator$switch_name\))]($style)[┠](bold yellow)'

[openstack]
format = '[┨](bold yellow)[$symbol$cloud(\($project\))]($style)[┠](bold yellow)'

[package]
disabled = true
symbol = " "
format = '[┨](bold yellow)[$symbol$version]($style)[┠](bold yellow)'

[perl]
symbol = " "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[php]
symbol = " "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[pulumi]
format = '[┨](bold yellow)[$symbol$stack]($style)[┠](bold yellow)'

[purescript]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[python]
symbol = " "
format = '[┨](bold yellow)[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)[┠](bold yellow)'

[red]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[ruby]
symbol = " "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[rust]
symbol = " "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[scala]
symbol = " "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[shlvl]
symbol = " "

[sudo]
disabled = true
symbol = " "
style = "bold red"
format = '[┨](bold yellow)[$symbol]($style)[┠](bold yellow)'

[swift]
symbol = "ﯣ "
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[terraform]
format = '[┨](bold yellow)[$symbol$workspace]($style)[┠](bold yellow)'

[vagrant]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[vlang]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[zig]
format = '[┨](bold yellow)[$symbol($version)]($style)[┠](bold yellow)'

[custom.jj]
command = '''
jj log -r@ --limit 1 --ignore-working-copy --no-graph --color always  -T '
  separate(" ",
    if(hidden,
      label("hidden",
        change_id.shortest(4) ++ " hidden"
      ),
      label(if(divergent, "divergent"),
        change_id.shortest(4) ++ if(divergent, "??")
      )
    ),
  )
'
jj log -r@ --limit 1 --no-graph -T "" --stat --color always | tail -n1 | sd '(\d+) files? changed, (\d+) insertions?\(\+\), (\d+) deletions?\(-\)' '\033[1;36m(${1}m)\033[0m' | sd '\(0m\)' '' | sd "\n" " "
jj log -r@ --limit 1 --ignore-working-copy --no-graph --color always  -T '
  separate(" ",
    branches.map(|x| if(
        x.name().substr(0, 10).starts_with(x.name()),
        x.name().substr(0, 10),
        x.name().substr(0, 9) ++ "…")
      ).join(" "),
    if(description,
      label("working_copy", 
        surround("\"","\"",
          if(
             description.first_line().substr(0, 24).starts_with(description.first_line()),
             description.first_line().substr(0, 24),
             description.first_line().substr(0, 23) ++ "…"
          )
        )
      )
    ),
  )
'
'''
when = "jj root --ignore-working-copy"
detect_folders = [".jj"]
symbol = "jj:"
format = "[┨](bold yellow)[$symbol$output]($style)[┠](bold yellow)"
