[ui]
default-command = "log"
movement.edit = true
merge-editor = "nvim"
diff-formatter = ["difft", "--color=always", "$left", "$right"]
pager = "delta"

[merge-tools.nvim]
program = "nvim"
merge-args = ["-f", "-d", "$output", "-M",
    "$left", "$base", "$right",
    "-c", "wincmd J", "-c", "set modifiable",
    "-c", "set write"]
merge-tool-edits-conflict-markers = true

[merge-tools.delta]
program = "delta"
diff-args = ["--line-numbers", "--side-by-side", "--navigate", "--width", "$width", "$left", "$right"]
diff-expected-exit-codes = [0, 1]

[merge-tools.meld]
program = "meld"

[template-aliases]
# Username part of the email address
'format_short_signature(signature)' = 'signature.email().local()'

log_compact_and_status = '''
  concat(
    builtin_log_compact(self),
    if(current_working_copy && !empty, diff.summary()),
  )
'''

log_compact_and_files = '''
  concat(
    builtin_log_compact(self),
    if(!immutable && !empty, diff.summary()),
  )
'''

"in_branch(commit)" = 'commit.contained_in("immutable_heads()..bookmarks()")'


[revset-aliases]
'thisofftrunk()' = 'trunk()..@ | (..trunk() ~ ..@) | latest(..trunk() & ..@)'

# found at https://ofcr.se/jujutsu-merge-workflow
#   usage: jj rebase -s 'all:roots(allofftrunk())' -d main
#   will rebase all
'allofftrunk()' = 'trunk()..@'


# found at https://reasonablypolymorphic.com/blog/jj-strategy/index.html
'accordion()' = '@ | bases | bookmarks | curbookmark::@ | @::nextbookmark | downstream(@, bookmarksandheads)'
'bases' = 'trunk()'
'downstream(x,y)' = '(x::y) & y'
'bookmarks' = 'downstream(trunk(), bookmarks()) & mine()'
'bookmarksandheads' = 'bookmarks | (heads(trunk()::) & mine())'
'curbookmark' = 'latest(bookmarks::@- & bookmarks)'
'nextbookmark' = 'roots(@:: & bookmarksandheads)'
'closest_bookmark(to)' = 'heads(::to & bookmarks())'
'closest_pushable(to)' = 'heads(::to & mutable() & ~description(exact:"") & (~empty() | merges()))'

[aliases]
l = ["log", "-r", 'thisofftrunk()']
lh = ["log", "-r", "@-"]
r = ["log", "-r", "::@", "--limit", "10"]
lf = ["log", "-T" , "builtin_log_compact_full_description"]
ll = ["log", "--template=log_compact_and_status"]
llf = ["log", "--template=log_compact_and_files"]
tug = ["bookmark", "move", "--from", "closest_bookmark(@)", "--to", "closest_pushable(@)"]
tugmain= ["bookmark", "move", "--from", "trunk()", "--to", "closest_pushable(@)"]

[git]
private-commits = "description(glob:'private:*') | description(glob:'local:*') | description(glob:'stash:*') | description(glob:'wip:*')"

[templates]
log_node = '''
if(self && !current_working_copy && !immutable && !conflict && in_branch(self),
  "â—‡",
  builtin_log_node
)
'''

draft_commit_description = '''
concat(
  description,
  surround(
    "\nJJ: This commit contains the following changes:\n", "",
    indent("JJ:     ", diff.summary()),
  ),
  "\nJJ: ignore-rest\n\n",
  diff.git()
)
'''
