[alias]
  st = status
  ci = commit
  br = branch
  co = checkout
  cod = checkout --detach
  di = diff --ignore-space-change
  dc = diff --ignore-space-change --cached
  aa = add --all

  cl = clean -id
  purge = clean -f
  rollback = reset --soft HEAD^
  root = !pwd

  l = "!. ~/.config/git/githelpers.zsh && pretty_git_log"
  la = !git lg --all
  lg = !git l --graph
  lgs = !git lg --stat
  ls = !git l --stat
  lp = !git log -p
  lpw = !git log -p -w
  sin = "!git fetch --quiet && git l $(git rev-parse --abbrev-ref HEAD)..origin/$(git rev-parse --abbrev-ref HEAD)"

  # Head commit
  h = !git l -1
  hp = !git log -1 -p
  hpw = !git log -1 -p -w
  hs = !git h --stat

  # Recent commits
  r = !git l -15
  ra = !git r --all
  rs = !git r --stat
  rp = !git log -15 -p
  rpw = !git log -15 -p -w

  aip = add -ip
  unstage = restore --staged
  sw = switch

  stashbr = "!git stash push -u -m \"from $(git branch --show-current)\""
  pullr = pull --rebase
  pushup = "!git push --set-upstream origin \"$(git branch --show-current)\""
  pushf = "!case \"$(git branch --show-current)\" in \
              main | master) echo \"Cannot force push to $(git branch --show-current)\" >&2; exit 1 ;; \
              *) git push --force-with-lease ;; \
            esac"
  rebasedev = !git fetch && git rebase origin/development
  rebasemain = !git fetch && git rebase origin/main
  resetdate = commit --amend --date=now --no-edit --no-verify
  ; delete-branch-remote = "!git branch --format='%(refname:short)' | grep -v '^main$' | fzf -0 --query="$1" | xargs git push origin --delete"
  ; delete-branch = "!git branch --format='%(refname:short)' | grep -v '^main$' | fzf -0 --query="$1" | xargs git branch --delete"

  authors= !git log --pretty=format:'%aN <%ae>' | sort -u | uniq

[color]
  ui=true
[push]
  default = tracking
[core]
  editor = /opt/homebrew/bin/nvim
  excludesfile = ~/.config/git/gitignore_global
  attributesfile = ~/.config/git/gitattributes_global
[merge]
  defaultToUpstream = true
  autoStash = true
[rebase]
  autoStash = true
[init]
  defaultBranch = main
[pull]
  ff = only
[mailmap]
  file = ~/.config/git/mailmap.local
[include]
  path = ~/.config/git/gitconfig.local
[fetch]
  prune = true
  pruneTags = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

# vim:ft=gitconfig
