if has_command jj; then
  source <(jj util completion zsh)

  # Dynamic completions
  source <(COMPLETE=zsh jj)

  function jj.fetch() {
    local cur_main=$(jj log -r 'trunk()' --limit 1 -T 'change_id' --no-graph --color never --quiet --ignore-working-copy)
    jj git fetch && jj log -r "$cur_main..trunk()"
  }

  function jj.pull() {
    jj.fetch && jj rebase -d 'trunk()'
  }

  function jj.bk.move() {
    local to="$1"
    local query="$2"
    if [[ -z "$to" ]]; then
      jj log --ignore-working-copy --quiet
      echo -n "Move bookmark to where: "; read to
      [[ -z "$to" ]] && return 0
    fi

    local bookmark=$(
      jj bookmark list -T 'if(!remote, name ++ "\n")' --ignore-working-copy --quiet \
        | fzf -e --prompt "bookmark> " --layout reverse --preview-window down --query "$query" --preview "
            jj log \
              --ignore-working-copy \
              --quiet \
              -r 'ancestors(bookmarks(\"{}\"), 3)' \
              --color always \
              -T 'separate(\" \", author.username(), author.timestamp(), description.first_line())'"
      )
    if [[ -n "$bookmark" ]]; then
      echo "Moving $bookmark"
      jj bookmark move $bookmark --to $to
    fi
  }

  function jj.bk.track() {
    local query="$1"
    local bookmark=$(
      jj bookmark list -a -T 'if(remote && !tracked, name ++ "@" ++ remote ++ "\n")' --ignore-working-copy --quiet \
        | fzf -e -d @ --query "$query" --preview "
            jj log \
              --ignore-working-copy \
              --quiet \
              -r 'ancestors(remote_bookmarks(\"{1}\", \"{2}\"), 3)' \
              --color always \
              -T 'separate(\"\n\", author.username() ++ \" \" ++ author.timestamp(), description.first_line())'"
    )
    if [[ -n "$bookmark" ]]; then
      echo "Tracking $bookmark"
      jj bookmark track $bookmark
    fi
  }
fi
